---
name: Publish Npm Package

on: 
  push:
    tags:
      - 'v*'

jobs:
  build-test-coverage:
    name: Build test and coverage codebase
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        redis-version: [7]
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
      - name: Using Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Start Redis
        uses: supercharge/redis-github-action@1.4.0
        with:
          redis-version: ${{ matrix.redis-version }}
          redis-port: 6389
          redis-container-name: redis
      - run: npm ci --ignore-scripts
      - run: npm test 
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #- run: npm run coverage
      # - uses: codecov/codecov-action@v3
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./coverage/lcov-report/
      #     fail_ci_if_error: true
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}

  release:
    name: Create GitHub Release
    needs: build-test-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
      - name: Checkout main branch
        run: git checkout main
      - name: Create GitHub Release with Auto-generated Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ github.ref_name }} \
            --generate-notes \
            --target main

  publish:
    name: Publish to Npm
    needs: release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build
      - id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          registry: https://registry.npmjs.org/
      - if: steps.publish.outputs.type != 'none'
        run: |
          echo "Version changed: ${{ steps.publish.outputs.old-version }} => ${{ steps.publish.outputs.version }}"
      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: 'failure'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.DREAMYSTIFY_SLACK_BOT_PACKAGES }}

